name: Flask Continuous Integration

on:  #Trigger whenever there is a push to my main branch
  push:
    branches: [main]


jobs: #The actions

  build: 
    runs-on: ubuntu-latest #universal os, that is heavily support by developers

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Create Virtual Environment
        run: | 
          python -m venv venv
          source venv/bin/activate

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Print debugging information
        run: |
          echo "Python Version: $(python --version)"
          echo "Working Directory: $(pwd)"
          echo "Contents of Working Directory: $(ls -l)"
          echo "Contents of site-packages: $(ls -l venv/lib/python*/site-packages)"

  test:
    needs: build #Means that we need the build job to complete before we run our tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Create Virtual Environment
        run: | 
          python -m venv venv
          source venv/bin/activate

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest discover -s tests -p 'test_*.py' #Running all test files inside my test folder as long as the file i named test_<anything>.py

  
  deploy:
    needs: test #Means that we need the build job to complete before we run our tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Create Virtual Environment
        run: | 
          python -m venv venv
          source venv/bin/activate

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Deploy to Production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}




  